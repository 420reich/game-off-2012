<% include header.ejs %>
<div class="break"></div>

<div class="create-robot container">
    <div class="header">
        <span class="header-icon"></span>
        <div class="header-title">
            <h1>letâ€™s code a robot?</h1>
        </div>
        <div class="header-subtitle">just type and watch the preview to the right</div>
    </div>

    <form id="robo-code-form" method="POST" action="">
        <div class="row">
            <div class="span7">

                <input type="hidden" class="code" name="code">
                <% if (locals.update) {%>
                    <input type="hidden" name="_method" value="put">
                <%} %>
                <input name="title" id="title" type="text" require="required" placeholder="The name of your Robot!" <% if(locals.robotTitle){ %> value="<%= robotTitle %>" <% } %>>

                <label for="public">public</label>
                <input name="public" id="public" type="checkbox" <% if(public){ %> checked="checked" <% } %> <% if(locals.update) {%> disabled="disabled" <% } %>>

                <div class="editor"></div>
            </div>

            <div class="span5">
                <div class="board"></div>
            </div>
        </div>

        <button class="btn" id="submit-btn">SAVE ROBOT</button>
    </form>
</div>

<% include scripts.ejs %>
<script>
    $(function() {
        var editor = $('.editor')[0];
        var board = $('.board'),
            submitButton = $('#submit-btn');

        var defaultCode = [
            "//FightCode can only understand your robot",
            "//if its class is called Robot",
            "var Robot = function(robot){",
            "   ",
            "};",
            "",
            "Robot.prototype.onIdle = function(ev) {",
            "   var robot = ev.robot;",
            "   robot.ahead(100);",
            "   robot.rotateCannon(360);",
            "   robot.back(100);",
            "   robot.rotateCannon(360);",
            "   ",
            "};",
            "",
            "Robot.prototype.onScannedRobot = function(ev) {",
            "   var robot = ev.robot;",
            "   robot.fire();",
            "   ",
            "};"
        ],
        roboCodeText = decodeURI("<%= locals.roboCode || '' %>"),
        code = null,
        unescapeHtml = function (text) {
            var temp = document.createElement("div");
            temp.innerHTML = text;
            var result = temp.childNodes[0].nodeValue;
            temp.removeChild(temp.firstChild);
            return result;
        };

        if (roboCodeText != "") {
            code = unescapeHtml(roboCodeText);
        } else {
            code = defaultCode.join('\n');
        }

        var codeMirror = CodeMirror(editor, {
            value: code,
            mode:  "javascript",
            theme: 'ambiance',
            height: 500,
            tabSize: 2,
            lineNumbers: true
        });

        submitButton.bind('click', function(ev) {
            var form = $('robo-code-form');
            $('.code').val(codeMirror.getValue());
            form.submit();
        });

        board.bind('click', function(ev) {
            board.empty();
            var container = $('<div></div>');
            board.append(container);

            var robotCode = codeMirror.getValue();
            var robotClass = new Function("window", "with(window){" + robotCode + "\nreturn robotClass;}")({});
            robot = new robotClass('a');

            var duckCode = [
                'var duck = function() {};',
                'duck.prototype.onIdle = function(ev) {',
                '   var robot = ev.robot;',
                //'   robot.turn(90);',
                //'   robot.ahead(50);',
                //'   robot.back(50);',
                '};',
                'return duck;'
            ]
            var duck = new Function("window", "with(window){" + duckCode.join('') + "\nreturn robotClass;}")({});

            engine = new Engine(480, 480, 2000, robot, new duck());

            engine.robotsStatus[0].rectangle.setPosition(100, 100);
            engine.robotsStatus[1].rectangle.setPosition(250, 250);

            result = engine.fight();

            game = new Game(container, result, {
                msPerRound: 12
            });

            game.initialize();
        });
    });
</script>
<% include scripts.ejs %>
<% include footer.ejs %>
