<% include header.ejs %>
<div class="create-robot">

    <div class="row-fluid">
        <div class="span12">
            <h1>Let's create a new Robot?</h1>
            <p>Just type and watch the live preview to the right.</p>
        </div>
    </div>
 
    <div class="row-fluid">
        <div class="span7">
            <div class="editor"></div>
        </div>
        <div class="span5">
            <div class="board">
            </div>
        </div>
    </div>

    <form id="robo-code-form" method="POST" action="">
        <input type="hidden" class="code" name="code" value="">
        <div class="row-fluid">
            <div class="span5">
                <h2>How to call this awesomeness?</h2>
            </div>
            <div class="span7">
                <p><input name="title" type="text" value="<%= robotTitle %>"></p>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span5">
                <h2>Must to be public?</h2>
            </div>
            <div class="span7">
                <p><select name="public"><option value="yes">Yes</option><option value="no">No</option></select></p>
            </div>
        </div>
        <button id="submit-btn">Save</button>
    </form>
</div>

<% include scripts.ejs %>
<script>
    $(function() {
        var editor = $('.editor')[0];
        var board = $('.board'),
            submitButton = $('#submit-btn');

        var defaultCode = [
            "//FightCode can only understand your robot",
            "//if its class is called robotClass",
            "var robotClass = function(){",
            "   ",
            "};",
            "",
            "robotClass.prototype.onIdle = function(ev) {",
            "   var robot = ev.robot;",
            "   robot.ahead(100);",
            "   robot.rotateCannon(360);",
            "   robot.back(100);",
            "   robot.rotateCannon(360);",
            "   ",
            "};",
            "",
            "robotClass.prototype.onScannedRobot = function(ev) {",
            "   var robot = ev.robot;",
            "   robot.fire();",
            "   ",
            "};"
        ],
        roboCodeText = decodeURI("<%= roboCode %>"),
        code = null,
        unescapeHtml = function (text) {
            var temp = document.createElement("div");
            temp.innerHTML = text;
            var result = temp.childNodes[0].nodeValue;
            temp.removeChild(temp.firstChild);
            return result;
        };

        if (roboCodeText != "") {
            code = unescapeHtml(roboCodeText);
        } else {
            code = defaultCode.join('\n');
        }

        var codeMirror = CodeMirror(editor, {
            value: code,
            mode:  "javascript",
            theme: 'ambiance',
            height: 500,
            tabSize: 2,
            lineNumbers: true
        });

        submitButton.bind('click', function(ev) {
            var form = $('robo-code-form');
            $('.code').val(codeMirror.getValue());
            form.submit();
        });

        board.bind('click', function(ev) {
            board.empty();
            var container = $('<div></div>');
            board.append(container);

            var robotCode = codeMirror.getValue();
            var robotClass = new Function("window", "with(window){" + robotCode + "\nreturn robotClass;}")({});
            robot = new robotClass('a');

            var duckCode = [
                'var duck = function() {};',
                'duck.prototype.onIdle = function(ev) {',
                '   var robot = ev.robot;',
                //'   robot.turn(90);',
                //'   robot.ahead(50);',
                //'   robot.back(50);',
                '};',
                'return duck;'
            ]
            var duck = new Function("window", "with(window){" + duckCode.join('') + "\nreturn robotClass;}")({});

            engine = new Engine(480, 480, 2000, robot, new duck());

            engine.robotsStatus[0].rectangle.position = new Vector2(100, 100);
            engine.robotsStatus[1].rectangle.position = new Vector2(250, 250);

            result = engine.fight();

            game = new Game(container, result, {
                msPerRound: 12
            });

            game.initialize();
        });
    });
</script>
<% include footer.ejs %>
